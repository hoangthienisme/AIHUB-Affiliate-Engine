// <auto-generated />
using System;
using AIHUB_Affiliate_Engine.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AIHUB_Affiliate_Engine.Migrations
{
    [DbContext(typeof(AffiliateDbContext))]
    partial class AffiliateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AIHUB_Affiliate_Engine.Models.Click", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("affiliate_code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ip_address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("landing_page")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("partner_id")
                        .HasColumnType("uuid");

                    b.Property<string>("referer_url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("session_id")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("user_agent")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("id");

                    b.HasIndex("partner_id");

                    b.ToTable("Clicks");
                });

            modelBuilder.Entity("AIHUB_Affiliate_Engine.Models.Commission", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("approved_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("click_id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("commission_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("conversion_type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("order_id")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("paid_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("partner_id")
                        .HasColumnType("uuid");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("id");

                    b.HasIndex("click_id");

                    b.HasIndex("partner_id");

                    b.ToTable("Commissions");
                });

            modelBuilder.Entity("AIHUB_Affiliate_Engine.Models.Log", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("action")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("entity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("AIHUB_Affiliate_Engine.Models.Partner", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("affiliate_code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("paid_commission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pending_commission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("total_clicks")
                        .HasColumnType("integer");

                    b.Property<decimal>("total_commission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("total_conversions")
                        .HasColumnType("integer");

                    b.Property<string>("tracking_url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("AIHUB_Affiliate_Engine.Models.Payout", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("account_info")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("approved_by")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("method")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("note")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("partner_id")
                        .HasColumnType("uuid");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("partner_id");

                    b.ToTable("Payouts");
                });

            modelBuilder.Entity("AIHUB_Affiliate_Engine.Models.Click", b =>
                {
                    b.HasOne("AIHUB_Affiliate_Engine.Models.Partner", "partner")
                        .WithMany("clicks")
                        .HasForeignKey("partner_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("partner");
                });

            modelBuilder.Entity("AIHUB_Affiliate_Engine.Models.Commission", b =>
                {
                    b.HasOne("AIHUB_Affiliate_Engine.Models.Click", "click")
                        .WithMany()
                        .HasForeignKey("click_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AIHUB_Affiliate_Engine.Models.Partner", "partner")
                        .WithMany("commissions")
                        .HasForeignKey("partner_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("click");

                    b.Navigation("partner");
                });

            modelBuilder.Entity("AIHUB_Affiliate_Engine.Models.Payout", b =>
                {
                    b.HasOne("AIHUB_Affiliate_Engine.Models.Partner", "partner")
                        .WithMany("payouts")
                        .HasForeignKey("partner_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("partner");
                });

            modelBuilder.Entity("AIHUB_Affiliate_Engine.Models.Partner", b =>
                {
                    b.Navigation("clicks");

                    b.Navigation("commissions");

                    b.Navigation("payouts");
                });
#pragma warning restore 612, 618
        }
    }
}
